Today's Topics
Spring Boot
JPA
Reminder : Download postman app.
Go through React App
------------------------------------

Refer : day17-data\day17_help\steps for spring mvc hibernate.txt" (for implementation steps)

Important diagrams for revision

1. comparison between JSP-JB n Spring MVC (day17_help)

2.day18-data\day18_help\diagrams\Spring MVC Hibernate Revision.png"

3. Refer : Tx management configuration n  internals : 
Readme : Transaction configuration steps.txt
Diagram : day18-data\day18_help\diagrams\spring-tx-management.png

4 . Revise Spring MVC Flow with code n diagram (day17_help)


New Objectives : 
Enter Spring Boot
Refer to "Spring boot sequence.txt"

Port earlier app in spring boot .

Observe n conclude.

Any problems ????

Enter JPA

Complete earlier flow.

Trace Request resp flow

1.Request URL :  http://host:port/day18_boot_cms/
Resp : index page (delivered by SC)

2. After user clicks on User login Link
Req : http://host:port/day18_boot/user/login
Resp : login.jsp

2.5 Any standard way of generating links / form actions 
1. To avoid the ambiguity of "/"  
2. Enable URL rewriting
Soln : JSTL soln : <c:url> OR <spring:url>


3. After clnt clicks of user login link
Request URL in presence of cookies : http://host:port/day18_boot/user/login , method=GET
Request URL in absence of cookies : http://host:port/day18_boot/user/login;jsessionid=fdh67867
Resp : login form sent


4. After clnt submit login form

Request URL :  http://host:port/day18_boot/user/login , method=POST
Resp in case of invalid login : forwarding the clnt to login page in the SAME request
In case of successful login , if user refreshes the page , any problem  : multiple submission issue
Solution: PRG (post-redirect-get) pattern

4.5 Problem : After changing to redirect , could you still get user details : ????

Solution  : (refer to : spring boot\diagrams\scopes)
Change request scope to session scope.
(Since In case of successful customer login 
A new (redirect) request from client --> http://host:port/day18_boot/customer/topics , with method=GET)
Resp : topics.jsp

5. After customer selects a topic
http://localhost:8080/day18_boot/customer/tutorials?topicId=4
resp : tutorials.jsp